name: rust release

on:
    workflow_dispatch:
        inputs:
            type:
                required: true
                default: 'stable'
                description: 'Available values: `beta` and `stable`'
            update_changelog:
                required: false
                description: 'Enables/disables Rust changelog update'
    schedule:
        - cron: '0 3 * * *'

jobs:
    generate-build-number:
        runs-on: ubuntu-18.04
        outputs:
            build_number: ${{ steps.buildnumber.outputs.build_number }}
        steps:
            - name: Generate build number
              uses: einaregilsson/build-number@v3
              id: buildnumber
              with:
                  token: ${{ secrets.github_token }}
                  prefix: rust

    get-release-branch:
        runs-on: ubuntu-18.04
        outputs:
            release-branch: ${{ steps.get-release-branch.outputs.release-branch }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - id: get-release-branch
              run: |
                  branch=$(python scripts/get_release_branch.py)
                  echo "::set-output name=release-branch::$branch"

    update-changelog-link:
        runs-on: ubuntu-18.04
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}

            - run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Set up git user
              run: |
                  git config --local user.email "intellij.rust@gmail.com"
                  git config --local user.name "intellij-rust-bot"

            - name: Update changelog link
              if: github.event_name == 'workflow_dispatch' && github.event.inputs.type == 'stable' && github.event.inputs.update_changelog != 'false'
              run: python scripts/update_changelog_link.py

    get-channel:
        runs-on: ubuntu-18.04
        outputs:
            channel: ${{ steps.get-channel.outputs.channel }}
        steps:
            - id: get-channel
              run: |
                if ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.type == 'stable' }}
                then
                  echo "::set-output name=channel::stable"
                else
                  echo "::set-output name=channel::beta"
                fi

    fetch-latest-changes:
        runs-on: ubuntu-18.04
        needs: [ get-release-branch, update-changelog-link, get-channel ]
        outputs:
            rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}
            rust-release: ${{ steps.fetch-commits.outputs.rust-release }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ needs.get-release-branch.outputs.release-branch }}
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Fetch latest commits
              id: fetch-commits
              run: |
                  echo "::set-output name=rust-commit::$(git log -n 1 --format=format:%H)"
                  echo "::set-output name=rust-release::$(python scripts/get_tag_commit.py --tag "rust-${{ needs.get-channel.outputs.channel }}")"

            - name: Show commits
              run: |
                  echo "rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}"
                  echo "rust-release: ${{ steps.fetch-commits.outputs.rust-release }}"

    build-native-code:
        if: needs.fetch-latest-changes.outputs.rust-commit != needs.fetch-latest-changes.outputs.rust-release
        needs: [ fetch-latest-changes ]
        strategy:
            fail-fast: true
            matrix:
                config:
                    - name: linux
                      arch: x86-64
                      os: ubuntu-18.04
                      target: x86_64-unknown-linux-gnu
                      artifact_path: native-helper/target/x86_64-unknown-linux-gnu/release/intellij-rust-native-helper
                    - name: windows
                      arch: x86-64
                      os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_path: native-helper/target/x86_64-pc-windows-msvc/release/intellij-rust-native-helper.exe
                    - name: macos
                      arch: x86-64
                      os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_path: native-helper/target/x86_64-apple-darwin/release/intellij-rust-native-helper
                    - name: macos
                      arch: arm64
                      os: macos-11
                      target: aarch64-apple-darwin
                      artifact_path: native-helper/target/aarch64-apple-darwin/release/intellij-rust-native-helper

        name: ${{ matrix.config.name }}-${{ matrix.config.arch }}
        runs-on: ${{ matrix.config.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  target: ${{ matrix.config.target }}
                  default: true

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --manifest-path native-helper/Cargo.toml --target ${{ matrix.config.target }} --release

            - name: Publish
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.config.name }}-${{ matrix.config.arch }}
                  path: ${{ matrix.config.artifact_path }}

    build:
        if: needs.fetch-latest-changes.outputs.rust-commit != needs.fetch-latest-changes.outputs.rust-release
        needs: [ generate-build-number, get-release-branch, update-changelog-link, get-channel, fetch-latest-changes, build-native-code ]
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: true
            matrix:
                platform-version: [ 212, 213 ]
        env:
            ORG_GRADLE_PROJECT_buildNumber: ${{ needs.generate-build-number.outputs.build_number }}
            ORG_GRADLE_PROJECT_platformVersion: ${{ matrix.platform-version }}
            ORG_GRADLE_PROJECT_enableBuildSearchableOptions: true
            ORG_GRADLE_PROJECT_publishChannel: ${{ needs.get-channel.outputs.channel }}
            ORG_GRADLE_PROJECT_publishToken: ${{ secrets.plugin_bot_token }}
            ORG_GRADLE_PROJECT_compileNativeCode: false

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ needs.get-release-branch.outputs.release-branch }}

            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Load linux binaries
              uses: actions/download-artifact@v2
              with:
                  name: linux-x86-64
                  path: bin/linux/x86-64

            - name: Load windows binaries
              uses: actions/download-artifact@v2
              with:
                  name: windows-x86-64
                  path: bin/windows/x86-64

            - name: Load macos x86 binaries
              uses: actions/download-artifact@v2
              with:
                  name: macos-x86-64
                  path: bin/macos/x86-64

            - name: Load macos arm64 binaries
              uses: actions/download-artifact@v2
              with:
                  name: macos-arm64
                  path: bin/macos/arm64

            - name: Publish rust plugin
              uses: gradle/gradle-build-action@v1
              with:
                  arguments: ":plugin:publishPlugin"

    save-commit:
        needs: [ get-channel, fetch-latest-changes, build ]
        runs-on: ubuntu-18.04
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Save commits
              run: |
                  python scripts/save_tag.py --tag rust-${{ needs.get-channel.outputs.channel }} --commit ${{ needs.fetch-latest-changes.outputs.rust-commit }}
