name: rust nightly

on:
    workflow_dispatch:
    schedule:
        - cron: '0 2 * * *'

jobs:
    generate-build-number:
        runs-on: ubuntu-18.04
        outputs:
            build_number: ${{ steps.buildnumber.outputs.build_number }}
        steps:
            - name: Generate build number
              uses: einaregilsson/build-number@v3
              id: buildnumber
              with:
                  token: ${{ secrets.github_token }}
                  prefix: rust

    fetch-latest-changes:
        runs-on: ubuntu-18.04
        outputs:
            rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}
            rust-nightly: ${{ steps.fetch-commits.outputs.rust-nightly }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Fetch latest commits
              id: fetch-commits
              run: |
                  echo "::set-output name=rust-commit::$(git log -n 1 --format=format:%H)"
                  echo "::set-output name=rust-nightly::$(python scripts/get_tag_commit.py --tag "rust-nightly")"

            - name: Show commits
              run: |
                  echo "rust-commit: ${{ steps.fetch-commits.outputs.rust-commit }}"
                  echo "rust-nightly: ${{ steps.fetch-commits.outputs.rust-nightly }}"


    build-native-code:
        if: needs.fetch-latest-changes.outputs.rust-commit != needs.fetch-latest-changes.outputs.rust-nightly
        needs: [ fetch-latest-changes ]
        strategy:
            fail-fast: true
            matrix:
                config:
                    - name: linux
                      arch: x86-64
                      os: ubuntu-18.04
                      target: x86_64-unknown-linux-gnu
                      artifact_path: native-helper/target/x86_64-unknown-linux-gnu/release/intellij-rust-native-helper
                    - name: windows
                      arch: x86-64
                      os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_path: native-helper/target/x86_64-pc-windows-msvc/release/intellij-rust-native-helper.exe
                    - name: macos
                      arch: x86-64
                      os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_path: native-helper/target/x86_64-apple-darwin/release/intellij-rust-native-helper
                    - name: macos
                      arch: arm64
                      os: macos-11
                      target: aarch64-apple-darwin
                      artifact_path: native-helper/target/aarch64-apple-darwin/release/intellij-rust-native-helper

        name: ${{ matrix.config.name }}-${{ matrix.config.arch }}
        runs-on: ${{ matrix.config.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  profile: minimal
                  toolchain: stable
                  target: ${{ matrix.config.target }}
                  default: true

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --manifest-path native-helper/Cargo.toml --target ${{ matrix.config.target }} --release

            - name: Publish
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ matrix.config.name }}-${{ matrix.config.arch }}
                  path: ${{ matrix.config.artifact_path }}

    build:
        if: needs.fetch-latest-changes.outputs.rust-commit != needs.fetch-latest-changes.outputs.rust-nightly
        needs: [ generate-build-number, fetch-latest-changes, build-native-code ]
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: true
            matrix:
                platform-version: [ 212, 213 ]
        env:
            ORG_GRADLE_PROJECT_buildNumber: ${{ needs.generate-build-number.outputs.build_number }}
            ORG_GRADLE_PROJECT_platformVersion: ${{ matrix.platform-version }}
            ORG_GRADLE_PROJECT_enableBuildSearchableOptions: true
            ORG_GRADLE_PROJECT_publishChannel: nightly
            ORG_GRADLE_PROJECT_publishToken: ${{ secrets.plugin_bot_token }}
            ORG_GRADLE_PROJECT_compileNativeCode: false

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11

            - name: Load linux binaries
              uses: actions/download-artifact@v2
              with:
                  name: linux-x86-64
                  path: bin/linux/x86-64

            - name: Load windows binaries
              uses: actions/download-artifact@v2
              with:
                  name: windows-x86-64
                  path: bin/windows/x86-64

            - name: Load macos x86 binaries
              uses: actions/download-artifact@v2
              with:
                  name: macos-x86-64
                  path: bin/macos/x86-64

            - name: Load macos arm64 binaries
              uses: actions/download-artifact@v2
              with:
                  name: macos-arm64
                  path: bin/macos/arm64

            - name: Publish rust plugin
              uses: gradle/gradle-build-action@v1
              with:
                  arguments: ":plugin:publishPlugin"

    save-commit:
        needs: [ build, fetch-latest-changes ]
        runs-on: ubuntu-18.04
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7

            - name: Save commits
              run: |
                  python scripts/save_tag.py --tag rust-nightly --commit ${{ needs.fetch-latest-changes.outputs.rust-commit }}
